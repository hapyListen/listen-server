// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	songlist "listen-server/app/user/cmd/user/internal/handler/songlist"
	user "listen-server/app/user/cmd/user/internal/handler/user"
	"listen-server/app/user/cmd/user/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 添加歌曲
				Method:  http.MethodPost,
				Path:    "/user/:userId/song",
				Handler: songlist.AddSongHandler(serverCtx),
			},
			{
				// 获取歌曲
				Method:  http.MethodGet,
				Path:    "/user/:userId/song",
				Handler: songlist.GetSongHandler(serverCtx),
			},
			{
				// 删除歌曲
				Method:  http.MethodPost,
				Path:    "/user/:userId/song/delete",
				Handler: songlist.DeleteSongHandler(serverCtx),
			},
			{
				// 更新歌曲
				Method:  http.MethodPost,
				Path:    "/user/:userId/song/update",
				Handler: songlist.UpdateSongHandler(serverCtx),
			},
			{
				// 创建歌单
				Method:  http.MethodPost,
				Path:    "/user/:userId/songlist",
				Handler: songlist.CreateSonglistHandler(serverCtx),
			},
			{
				// 获取歌单
				Method:  http.MethodGet,
				Path:    "/user/:userId/songlist",
				Handler: songlist.GetSongListHandler(serverCtx),
			},
			{
				// 删除歌单
				Method:  http.MethodPost,
				Path:    "/user/:userId/songlist/delete",
				Handler: songlist.DeleteSonglistHandler(serverCtx),
			},
			{
				// 更新歌单
				Method:  http.MethodPost,
				Path:    "/user/:userId/songlist/update",
				Handler: songlist.UpdateSongListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 获取用户信息
				Method:  http.MethodGet,
				Path:    "/user/:userId",
				Handler: user.GetUserInfoHandler(serverCtx),
			},
			{
				// 更新用户信息
				Method:  http.MethodPost,
				Path:    "/user/:userId/update",
				Handler: user.UpdateUserInfoHandler(serverCtx),
			},
			{
				// 用户登录
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
			{
				// 用户注册
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.UserRegisterHandler(serverCtx),
			},
			{
				// 重置密码
				Method:  http.MethodPost,
				Path:    "/user/reset-password",
				Handler: user.ResetPasswordHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)
}
